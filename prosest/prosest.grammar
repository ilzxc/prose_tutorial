#reference 'file:prosest.Semantics.dll';
#reference 'file:prosest.Learning.dll';
using prosest;
using prosest.Semantics;
using prosest.Learning;
using semantics prosest.Semantics.Semantics;
using learners prosest.Learning.WitnessFunctions;

language prosest;

@complete feature double Score = RankingScore;

@input string inp;

// Extract a substring from 'inp' between position 'posPair'
@start string out := Substring(inp, posPair);
Tuple<int?, int?> posPair := PositionPair(pos, pos) = Pair(pos, pos);

int? pos := AbsolutePosition(inp, k)
			| RegexPosition(inp, positionBoundaries, k);
Tuple<Regex, Regex> positionBoundaries := RegexPair(r, r) = Pair(r, r);

Regex r;
int k;
